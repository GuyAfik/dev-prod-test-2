args:
- description: Authorization Profile Name
  name: name
  required: true
- description: Authorization Profile Content
  name: content
  required: true
- description: Cisco active instance
  name: active_ise_instance
  required: true
commonfields:
  id: 6a240134-9669-492f-8010-fee24cfb0b76
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/panw-iot:1.0.0.79918
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CreateOrUpdateAuthorizationProfileToCiscoISE
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('CreateOrUpdateAuthorizationProfileToCiscoISE', 'start', __line__())


  CISCO_ISE_ACTIVE_INSTANCE = demisto.args().get("active_ise_instance")

  def create_update_auth_profile():
      try:
          authProfileName = demisto.args().get('name')
          content = demisto.args().get('content')

          auth_res = demisto.executeCommand("cisco-ise-get-authorization-profile-id", {"name":authProfileName,"using":CISCO_ISE_ACTIVE_INSTANCE})
          auth_res_content = auth_res[0]['Contents']
          if '[404] - Not Found' in auth_res_content:
              auth_profile_id='None'
          else:
              auth_profile_id=auth_res_content
          if auth_profile_id == 'None':
              auth_create_resp = demisto.executeCommand("cisco-ise-create-auth-profile", {"name":authProfileName,"content":content,"using":CISCO_ISE_ACTIVE_INSTANCE})
              return "Created authorization profile with name:"+str(auth_create_resp[0]['Contents'])
          else:
              auth_update_resp = demisto.executeCommand("cisco-ise-update-auth-profile", {"id":auth_profile_id, "name":authProfileName,"content":content,"using":CISCO_ISE_ACTIVE_INSTANCE})
              return 'Updated auth_profile and its id: '+auth_profile_id
      except Exception as e:
          raise Exception(traceback.format_exc())

  def main():
      try:
          return_results(create_update_auth_profile())
      except Exception as ex:
          return_error(str(ex))
      # return_results('status_msg')

  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('CreateOrUpdateAuthorizationProfileToCiscoISE', 'end', __line__())
scripttarget: 0
subtype: python3
tags:
- Cisco ISE
type: python
